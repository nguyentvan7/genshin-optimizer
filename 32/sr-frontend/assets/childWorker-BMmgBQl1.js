(function(){"use strict";const w={};function x(e){throw new Error(`Should not reach this with value ${e}`)}function C(e,s){const r=new Set;function n(i){r.has(i)||(s(i,n),r.add(i))}e.forEach(n)}function M(e,s,r,n){let i=1,t="'use strict';const x0=0";for(const[o,u]of Object.entries(w))t+=`,${o}=${u.calc.toString()}`;const l=new Map;return C(e,(o,u)=>{const c=`x${i++}`;l.set(o,c);const{op:f,x:p,br:m}=o;p.forEach(u),m.forEach(u);const a=p.map(h=>l.get(h)),$=m.map(h=>l.get(h));switch(f){case"const":l.set(o,typeof o.ex!="string"?`(${o.ex})`:`('${o.ex}')`);break;case"sum":case"prod":t+=`,${c}=`,a.length?t+=a.join(f=="sum"?"+":"*"):t+=f=="sum"?0:1;break;case"min":case"max":t+=`,${c}=Math.${f}(${a})`;break;case"sumfrac":t+=`,${c}=${a[0]}/(${a[0]} + ${a[1]})`;break;case"match":t+=`,${c}=${$[0]}===${$[1]}?${a[0]}:${a[1]}`;break;case"thres":t+=`,${c}=${$[0]}>=${$[1]}?${a[0]}:${a[1]}`;break;case"subscript":t+=`,${c}=${JSON.stringify(o.ex)}[${$[0]}]`;break;case"read":{const h=o.tag[s];let g=[...new Array(r)].map((_,T)=>`(b[${T}]['${h}'] ?? 0)`);n[h]&&(g=[n[h].toString(),...g]),t+=`,${c}=${g.join("+")}`;break}case"custom":t+=`,${c}=${o.ex}([${a}])`;break;case"lookup":t+=`,${c}=([${a}])[(${JSON.stringify(o.ex)})[${$[0]}] ?? 0]`;break;default:x(f)}}),t+=`;return [${e.map(o=>l.get(o))}]`,new Function("b",t)}const b=5e4,B=2e5;let y,S,d,k=[];onmessage=async e=>{try{await N(e)}catch(s){console.error(s),postMessage({resultType:"err",message:JSON.stringify(s)})}};async function N(e){const{data:s}=e,{command:r}=s;switch(r){case"init":v(s);break;case"start":await O();break}}async function v({lightConeStats:e,relicStatsBySlot:s,detachedNodes:r,constraints:n}){y=M(r,"q",7,{}),S=e,d=s,k=n,postMessage({resultType:"initialized"})}function*E(){for(const e of S)for(const s of d.head)for(const r of d.hands)for(const n of d.feet)for(const i of d.body)for(const t of d.sphere)for(const l of d.rope)yield{lightCone:e,head:s,hands:r,feet:n,body:i,sphere:t,rope:l}}async function O(){let e=[],s=0;function r(){const n=e.length;e.length>b&&(e.sort((i,t)=>t.value-i.value),e=e.slice(0,b)),postMessage({resultType:"results",builds:e,numBuildsComputed:n+s}),e=[],s=0}for(const{lightCone:n,head:i,hands:t,feet:l,body:o,sphere:u,rope:c}of E()){const f=y([n.stats,i.stats,t.stats,l.stats,o.stats,u.stats,c.stats]);k.every(({value:p,isMax:m},a)=>m?f[a+1]<=p:f[a+1]>=p)?e.push({value:f[0],lightConeId:n.id,relicIds:{head:i.id,hands:t.id,feet:l.id,body:o.id,sphere:u.id,rope:c.id}}):s++,e.length>B&&r()}e.length>0&&r(),postMessage({resultType:"done"})}})();
