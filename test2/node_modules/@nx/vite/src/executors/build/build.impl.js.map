{"version":3,"sources":["../../../../../../packages/vite/src/executors/build/build.impl.ts"],"sourcesContent":["import 'dotenv/config';\nimport { ExecutorContext, writeJsonFile } from '@nx/devkit';\nimport { build, InlineConfig, mergeConfig } from 'vite';\nimport {\n  getProjectTsConfigPath,\n  getViteBuildOptions,\n  getViteSharedConfig,\n} from '../../utils/options-utils';\nimport { ViteBuildExecutorOptions } from './schema';\nimport {\n  copyAssets,\n  createLockFile,\n  createPackageJson,\n  getLockFileName,\n} from '@nx/js';\nimport { existsSync, writeFileSync } from 'fs';\nimport { resolve } from 'path';\nimport { createAsyncIterable } from '@nx/devkit/src/utils/async-iterable';\nimport { registerPaths, validateTypes } from '../../utils/executor-utils';\n\nexport async function* viteBuildExecutor(\n  options: ViteBuildExecutorOptions,\n  context: ExecutorContext\n) {\n  const projectRoot =\n    context.projectsConfigurations.projects[context.projectName].root;\n\n  registerPaths(projectRoot, options, context);\n\n  const normalizedOptions = normalizeOptions(options);\n\n  const buildConfig = mergeConfig(\n    getViteSharedConfig(normalizedOptions, false, context),\n    {\n      build: getViteBuildOptions(normalizedOptions, context),\n    }\n  );\n\n  if (!options.skipTypeCheck) {\n    await validateTypes({\n      workspaceRoot: context.root,\n      projectRoot: projectRoot,\n      tsconfig: getProjectTsConfigPath(projectRoot),\n    });\n  }\n\n  const watcherOrOutput = await runInstance(buildConfig);\n\n  const libraryPackageJson = resolve(projectRoot, 'package.json');\n  const rootPackageJson = resolve(context.root, 'package.json');\n  const distPackageJson = resolve(normalizedOptions.outputPath, 'package.json');\n\n  // Generate a package.json if option has been set.\n  if (options.generatePackageJson) {\n    const builtPackageJson = createPackageJson(\n      context.projectName,\n      context.projectGraph,\n      {\n        target: context.targetName,\n        root: context.root,\n        isProduction: !options.includeDevDependenciesInPackageJson, // By default we remove devDependencies since this is a production build.\n      }\n    );\n\n    builtPackageJson.type = 'module';\n\n    writeJsonFile(`${options.outputPath}/package.json`, builtPackageJson);\n\n    const lockFile = createLockFile(builtPackageJson);\n    writeFileSync(`${options.outputPath}/${getLockFileName()}`, lockFile, {\n      encoding: 'utf-8',\n    });\n  }\n  // For buildable libs, copy package.json if it exists.\n  else if (\n    !existsSync(distPackageJson) &&\n    existsSync(libraryPackageJson) &&\n    rootPackageJson !== libraryPackageJson\n  ) {\n    await copyAssets(\n      {\n        outputPath: normalizedOptions.outputPath,\n        assets: [\n          {\n            input: projectRoot,\n            output: '.',\n            glob: 'package.json',\n          },\n        ],\n      },\n      context\n    );\n  }\n\n  if ('on' in watcherOrOutput) {\n    const iterable = createAsyncIterable<{ success: boolean }>(({ next }) => {\n      let success = true;\n      watcherOrOutput.on('event', (event) => {\n        if (event.code === 'START') {\n          success = true;\n        } else if (event.code === 'ERROR') {\n          success = false;\n        } else if (event.code === 'END') {\n          next({ success });\n        }\n        // result must be closed when present.\n        // see https://rollupjs.org/guide/en/#rollupwatch\n        if ('result' in event) {\n          event.result.close();\n        }\n      });\n    });\n    yield* iterable;\n  } else {\n    const output = watcherOrOutput?.['output'] || watcherOrOutput?.[0]?.output;\n    const fileName = output?.[0]?.fileName || 'main.cjs';\n    const outfile = resolve(normalizedOptions.outputPath, fileName);\n    yield { success: true, outfile };\n  }\n}\n\nfunction runInstance(options: InlineConfig) {\n  return build({\n    ...options,\n  });\n}\n\nfunction normalizeOptions(options: ViteBuildExecutorOptions) {\n  const normalizedOptions = { ...options };\n\n  // coerce watch to null or {} to match with Vite's watch config\n  if (options.watch === false) {\n    normalizedOptions.watch = null;\n  } else if (options.watch === true) {\n    normalizedOptions.watch = {};\n  }\n\n  return normalizedOptions;\n}\n\nexport default viteBuildExecutor;\n"],"names":["viteBuildExecutor","options","context","projectRoot","projectsConfigurations","projects","projectName","root","registerPaths","normalizedOptions","normalizeOptions","buildConfig","mergeConfig","getViteSharedConfig","build","getViteBuildOptions","skipTypeCheck","validateTypes","workspaceRoot","tsconfig","getProjectTsConfigPath","watcherOrOutput","runInstance","libraryPackageJson","resolve","rootPackageJson","distPackageJson","outputPath","generatePackageJson","builtPackageJson","createPackageJson","projectGraph","target","targetName","isProduction","includeDevDependenciesInPackageJson","type","writeJsonFile","lockFile","createLockFile","writeFileSync","getLockFileName","encoding","existsSync","copyAssets","assets","input","output","glob","iterable","createAsyncIterable","next","success","on","event","code","result","close","fileName","outfile","watch"],"mappings":"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"}