(function(){"use strict";const E=function*(e,t,a){for(let i=e;i<=t;i+=a)yield i};function B(e,t,a=1){return[...E(e,t,a)]}function y(e,t){return Object.fromEntries(e.map((a,i)=>[a,t(a,i)]))}const D=["1","2","3","4","5","6"],f=["hp","atk","def","hp_","atk_","def_","pen","crit_","crit_dmg_","anomProf"],u=["hp","atk","def","hp_","atk_","def_","crit_","crit_dmg_","anomProf",...["electric_dmg_","fire_dmg_","ice_dmg_","physical_dmg_","ether_dmg_"],"pen_","anomMas_","impact_","enerRegen_"];Array.from(new Set([...f,...u]));const M={hp:{B:39,A:79,S:112},atk:{B:7,A:15,S:19},def:{B:5,A:10,S:15},hp_:{B:.01,A:.02,S:.03},atk_:{B:.01,A:.02,S:.03},def_:{B:.016,A:.032,S:.048},pen:{B:3,A:6,S:9},crit_:{B:.008,A:.016,S:.024},crit_dmg_:{B:.016,A:.032,S:.048},anomProf:{B:3,A:6,S:9}};function R(e,t){return M[e][t]}const r={B:.1,A:.2,S:.3},K={atk_:r,hp_:r,def_:{B:.16,A:.32,S:.48},hp:{B:734,A:1468,S:2200},atk:{B:104,A:212,S:316},def:{B:60,A:124,S:184},anomProf:{B:32,A:60,S:92},crit_:{B:.08,A:.16,S:.24},crit_dmg_:{B:.16,A:.32,S:.48},pen_:{B:.08,A:.16,S:.24},electric_dmg_:r,fire_dmg_:r,ice_dmg_:r,physical_dmg_:r,ether_dmg_:r,anomMas_:r,enerRegen_:{B:.2,A:.4,S:.6},impact_:{B:.06,A:.12,S:.18}};function k(e,t,a){return K[t][e]??0}const P=["charLvl","enemyDef","enemyDefRed_","enemyRes_","enemyResRed_","enemyResIgn_","dmg_","impact","anomMas","shield_"];Array.from(new Set([...u,...f,...P]));const T=["impact","anomMas","dmg_","shield_"];Array.from(new Set([...u,...f,...T])),{...y(["burn","shock","corruption","shatter","assault"],e=>`${e} DMG Bonus`)},Object.entries({electric:"Electric",fire:"Fire",ice:"Ice",physical:"Physical",ether:"Ether"}).forEach(([e,t])=>{});const S=5e4;function F(e){const{id:t,mainStatKey:a,level:i,rarity:m,setKey:A,substats:l}=e;return{id:t,stats:{[a]:k(m,a),...Object.fromEntries(l.map(({key:_,upgrades:d})=>[_,R(_,m)*d]))},setKey:A}}let h;onmessage=async e=>{try{await w(e)}catch(t){console.error(t),postMessage({resultType:"err",message:JSON.stringify(t)})}};async function w(e){const{data:t}=e,{command:a}=t;switch(a){case"start":await C(t);break;case"terminate":v();break}}async function C({baseStats:e,conditionals:t,discsBySlot:a,constraints:i,setFilter2:m,setFilter4:A,numWorkers:l,formulaKey:_}){const d=y(D,n=>a[n].map(F)),{largestSlot:I}=Object.entries(a).reduce(({largestSlot:n,largestSize:s},[p,c])=>c.length>s?{largestSlot:p,largestSize:c.length}:{largestSlot:n,largestSize:s},{largestSlot:"head",largestSize:-1}),H=B(0,l-1).map(n=>y(D,s=>s===I?d[s].filter((p,c)=>c%l===n):d[s]));h=B(1,l).map(()=>new Worker(new URL(""+new URL("childWorker-Blt71wKo.js",self.location.href).href,self.location.href),{type:"module"}));let o=[],b=0;postMessage({resultType:"progress",progress:{numBuildsKept:0,numBuildsComputed:0}}),await Promise.all(h.map((n,s)=>new Promise((p,c)=>{n.onmessage=({data:g})=>{switch(g.resultType){case"initialized":n.postMessage({command:"start"});break;case"results":b+=g.numBuildsComputed,o=o.concat(g.builds),o.length>S*4&&(o.sort((L,O)=>O.value-L.value),o=o.slice(0,S)),postMessage({resultType:"progress",progress:{numBuildsKept:Math.min(o.length,S),numBuildsComputed:b}});break;case"done":p();break;case"err":console.error(g),c();break}};const j={command:"init",baseStats:e,conditionals:t,discStatsBySlot:H[s],constraints:i,formulaKey:_,setFilter2:m,setFilter4:A};n.postMessage(j)}))),postMessage({resultType:"done",buildResults:o.sort((n,s)=>s.value-n.value).slice(0,10)})}function v(){h.forEach(e=>e.terminate()),postMessage({resultType:"terminated"})}})();
